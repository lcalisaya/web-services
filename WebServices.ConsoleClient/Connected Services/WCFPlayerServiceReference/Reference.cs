//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServices.ConsoleClient.WCFPlayerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/WebServices.Data.Model")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActualClubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActualClub {
            get {
                return this.ActualClubField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualClubField, value) != true)) {
                    this.ActualClubField = value;
                    this.RaisePropertyChanged("ActualClub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFPlayerServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayers", ReplyAction="http://tempuri.org/IService1/GetPlayersResponse")]
        WebServices.ConsoleClient.WCFPlayerServiceReference.Player[] GetPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayers", ReplyAction="http://tempuri.org/IService1/GetPlayersResponse")]
        System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player[]> GetPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayer", ReplyAction="http://tempuri.org/IService1/GetPlayerResponse")]
        WebServices.ConsoleClient.WCFPlayerServiceReference.Player GetPlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayer", ReplyAction="http://tempuri.org/IService1/GetPlayerResponse")]
        System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player> GetPlayerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPlayer", ReplyAction="http://tempuri.org/IService1/AddPlayerResponse")]
        WebServices.ConsoleClient.WCFPlayerServiceReference.Player AddPlayer(string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPlayer", ReplyAction="http://tempuri.org/IService1/AddPlayerResponse")]
        System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player> AddPlayerAsync(string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePlayer", ReplyAction="http://tempuri.org/IService1/UpdatePlayerResponse")]
        WebServices.ConsoleClient.WCFPlayerServiceReference.Player UpdatePlayer(int id, string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePlayer", ReplyAction="http://tempuri.org/IService1/UpdatePlayerResponse")]
        System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player> UpdatePlayerAsync(int id, string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePlayer", ReplyAction="http://tempuri.org/IService1/DeletePlayerResponse")]
        WebServices.ConsoleClient.WCFPlayerServiceReference.Player[] DeletePlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePlayer", ReplyAction="http://tempuri.org/IService1/DeletePlayerResponse")]
        System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player[]> DeletePlayerAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebServices.ConsoleClient.WCFPlayerServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebServices.ConsoleClient.WCFPlayerServiceReference.IService1>, WebServices.ConsoleClient.WCFPlayerServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebServices.ConsoleClient.WCFPlayerServiceReference.Player[] GetPlayers() {
            return base.Channel.GetPlayers();
        }
        
        public System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player[]> GetPlayersAsync() {
            return base.Channel.GetPlayersAsync();
        }
        
        public WebServices.ConsoleClient.WCFPlayerServiceReference.Player GetPlayer(int id) {
            return base.Channel.GetPlayer(id);
        }
        
        public System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player> GetPlayerAsync(int id) {
            return base.Channel.GetPlayerAsync(id);
        }
        
        public WebServices.ConsoleClient.WCFPlayerServiceReference.Player AddPlayer(string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow) {
            return base.Channel.AddPlayer(fname, lname, birth, origin, genre, clubnow);
        }
        
        public System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player> AddPlayerAsync(string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow) {
            return base.Channel.AddPlayerAsync(fname, lname, birth, origin, genre, clubnow);
        }
        
        public WebServices.ConsoleClient.WCFPlayerServiceReference.Player UpdatePlayer(int id, string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow) {
            return base.Channel.UpdatePlayer(id, fname, lname, birth, origin, genre, clubnow);
        }
        
        public System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player> UpdatePlayerAsync(int id, string fname, string lname, System.DateTime birth, string origin, string genre, string clubnow) {
            return base.Channel.UpdatePlayerAsync(id, fname, lname, birth, origin, genre, clubnow);
        }
        
        public WebServices.ConsoleClient.WCFPlayerServiceReference.Player[] DeletePlayer(int id) {
            return base.Channel.DeletePlayer(id);
        }
        
        public System.Threading.Tasks.Task<WebServices.ConsoleClient.WCFPlayerServiceReference.Player[]> DeletePlayerAsync(int id) {
            return base.Channel.DeletePlayerAsync(id);
        }
    }
}
